@page "/produccion"
@using Reciplas.Models;
@inject NotificationService NotificationService 
@inherits OwningComponentBase<Usuario>
@using System.Collections.Generic;  
@inject DialogService DialogService   
@inject NavigationManager NavigationManager


<PageTitle>Areas</PageTitle>
<TituloPrincipal TextoPrincipal="Productos" TextoSecundario="Clientes" /> 
 
<RadzenButton Class="float-end" Click="@(args => NavigationManager.NavigateTo("/Empleados/Administracion/Consultas"))" Variant="Variant.Flat" Shade="Shade.Dark" Text="Área Administración" Icon="assignment" ButtonStyle="ButtonStyle.Light"/>
<RadzenButton Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Flat" Shade="Shade.Dark"  Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>
<br><br>

<CListado TItem="Models.Cliente" Data="@clientes" PageSize="5" AllowColumnResize="true" AllowAlternatingRows="false" Frozen="true">
       <Columns>
        <RadzenDataGridColumn TItem=" Models.Cliente" TextAlign="TextAlign.Center" Property="ID" Title="ID" Width="35px" Frozen="true" />
        <RadzenDataGridColumn TItem=" Models.Cliente"  Property="Nombre" Title="Nombre" Width="80px" />
        <RadzenDataGridColumn TItem="Models.Cliente"  Property="Direccion" Title="Direcci&oacute;n" Width="80px"/>
        <RadzenDataGridColumn TItem=" Models.Cliente" Property="DNI" Title="DNI" Width="50px"/> 
        <RadzenDataGridColumn TItem=" Models.Cliente" Property="Telefono" Title="Telef&oacute;no" Width="50px"/> 
        <RadzenDataGridColumn TItem=" Models.Cliente" TextAlign="TextAlign.Center"  Title="Pedidos" Width="90px">
            <Template Context="item">
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/PedidosDetalles"))" TextAlign="TextAlign.Center" Icon="list" ButtonStyle="ButtonStyle.Info" Style="margin-left: 5px" />
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/AgregarPedidoCliente"))" TextAlign="TextAlign.Center" Icon="add_circle_outline" Color="Color.Warning" ButtonStyle="ButtonStyle.Success" Style="margin-left: 5px" />    
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Produccion/ModificarPedidoCliente"))" TextAlign="TextAlign.Center" Icon="assignment" Color="Color.Warning" Style="margin-left: 5px" />
                <RadzenButton Click=@RegisterEliminado  TextAlign="TextAlign.Center" Icon="delete" ButtonStyle="ButtonStyle.Danger"Style="margin-left: 5px"/>
            </Template>
        </RadzenDataGridColumn>  
        <RadzenDataGridColumn TItem=" Models.Cliente" Title="Ventas" Width="80px" Context="clientes" Filterable="false" Sortable="false">
            <Template Context="data"> 
                <RadzenCheckBox Style="margin-left: 25px" @bind-Value=@data.PerfilAprobacion TValue="bool" Name=@($"CheckBoxNro{data.Id}")
                    Disabled="true" />
                <RadzenLabel Text="@(data.PerfilAprobacion ? "Finalizo" : "No Finalizo")" Component=@($"CheckBoxNro{data.Id}") /> 
            </Template>
        </RadzenDataGridColumn> 
                     
</Columns>  
</CListado> 
     



@code {
    IEnumerable<Models.Cliente> clientes;   
    protected bool cargando = true;    
    bool value;
    [Parameter] public bool SoloLectura { get; set; } = true;
    [Parameter] public string Nombre {get; set;}
    [Parameter] public string Direccion {get; set;}
    [Parameter] public int DNI {get; set;} 
    [Parameter] public int Telefono {get; set;}  


    bool EmployeeIDVisible = false; 

    private void OnClick(string text)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Detail = text });
    }
  protected async Task QuitarAdjunto(int id)
    {
      //
    }
    private int _count;
    protected override Task OnInitializedAsync()
    {
        List<Models.Cliente> persons = new List<Models.Cliente>();
        var person1 = new Models.Cliente {ID =12,Nombre = "Chiara Musmann", Direccion = "Calle gualaby 42 Sydney", Telefono =4123456, DNI=12398745, PerfilAprobacion=true};
        var person2 = new Models.Cliente {ID =7, Nombre = "Nahia Orgoñ", Direccion = "French 414", Telefono =4789456, DNI=45646587, PerfilAprobacion=true};
        var person3 = new Models.Cliente {ID =5, Nombre = "Valen Sosa", Direccion = "Av. Sarmiento", Telefono =4562316, DNI=78912356, PerfilAprobacion=true};
        var person4 = new Models.Cliente {ID =32,Nombre = "Mariano Gomez", Direccion = "Calle importante", Telefono =4987464, DNI=456547986, PerfilAprobacion=false};
        var person5 = new Models.Cliente {ID =15,Nombre = "Leandro Espindola", Direccion = "NI idea", Telefono =4158726, DNI=451239876, PerfilAprobacion=true};
        var person6 = new Models.Cliente {ID =13,Nombre = "Bibiana  Gonzalez", Direccion = "ejemplo 6", Telefono =4341897, DNI=46541356, PerfilAprobacion=false};
        var person7 = new Models.Cliente {ID =69,Nombre = "Mateo Altamirano", Direccion = "otra calle importante", Telefono =4786131, DNI=454563126, PerfilAprobacion=false};

        persons.Add(person1);
        persons.Add(person2);
        persons.Add(person3);
        persons.Add(person4);
        persons.Add(person5);
        persons.Add(person6);
        persons.Add(person7);

        clientes = persons;
        _count = persons.Count;

        return base.OnInitializedAsync();
    }
 async Task RegisterEliminado()
    {
        var result = await DialogService.OpenAsync("Está seguro de que desea eliminar el Pedido?", ds =>
        @<div>
            <div class="row">
                <div class="col">
                   <a href="/Empleados/Produccion/Pedidos"><RadzenButton Click=@(args => OnClick("Registro Eliminado")) TextAlign="TextAlign.Center" Icon="delete" ButtonStyle="ButtonStyle.Danger" Style="margin-left: 5px" Text="Eliminar" class="me-1"/></a>
                   <RadzenButton Click="() => ds.Close(false)" TextAlign="TextAlign.Center" Icon="delete" ButtonStyle="ButtonStyle.Light" Style="margin-left: 5px" Text="Cancelar"  class="me-1 float-end" />                </div>
            </div>
        </div>);
    }
}

