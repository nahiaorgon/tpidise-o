@page "/Ventas/EditarVenta/{id:int}"
@inject NotificationService NotificationService 
@inherits OwningComponentBase<Usuario> 
@inject NavigationManager NavigationManager  
@inject Reciplas.Clases.ApplicationDbContext _contexto 
@using Reciplas.Clases;
@using Reciplas.Repositorio;
@inject IRepositorioVentas RepositorioVentas;

<TituloPrincipal TextoPrincipal="Ventas" TextoSecundario="Clientes" /> 
@if (editarVenta == null)
{
    <p><em>Loading...</em></p>
}
else
{

        <EditForm  Model="@editarVenta" OnValidSubmit="@(() => manejoEditarVenta())">
        <DataAnnotationsValidator/>
    <RadzenRow Gap="2rem" Class="rz-p-0 rz-p-lg-4">
            <RadzenColumn Size="12" SizeMD="6">    

                <RadzenButton style="margin-left:380px" Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/AgregarPedidoCliente"))" TextAlign="TextAlign.Center" Icon="add_circle_outline" Text="Agregar Pedido" Color="Color.Warning"  />
<br><br>
                <RadzenStack>
                    <RadzenFieldset Text="Editar Pedido">
                        <RadzenStack Gap="1rem">
                            <RadzenRow AlignItems="AlignItems.Center"> 
                                <RadzenColumn Size="12" SizeMD="4">
                                    <RadzenLabel Text="Nombre y Apellido" />
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="8">
                                    <InputNumber Style="width: 100%;" @bind-Value="editarVenta.id" class="form-control"></InputNumber>
                                    <ValidationMessage For="() => editarVenta.id"></ValidationMessage>                                </RadzenColumn> 
                                <RadzenColumn Size="12" SizeMD="4">
                                    <RadzenLabel Text="Cliente" />
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="8">
                                    
                                    <InputText Style="width: 100%;" Name="CardNr" @bind-Value="editarVenta.cliente" class="form-control"> </InputText>
                                    <ValidationMessage For="() => editarVenta.cliente"></ValidationMessage>
                                </RadzenColumn> 
                                <RadzenColumn Size="12" SizeMD="4">
                                    <RadzenLabel Text="Fecha" />
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="8">
                                     <InputDate Style="width: 100%;" Name="ExpiryDate"
                                    ShowTime="true" DateFormat="dd/MM/yyyy" @bind-Value="editarVenta.fecha"  class="form-control"></InputDate>
                                    <ValidationMessage For="() => editarVenta.fecha"></ValidationMessage>
                                </RadzenColumn> 
                            </RadzenRow>
                        </RadzenStack>
                    </RadzenFieldset>
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow> 
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">            
            <a href="/ventas"><RadzenButton Style="margin-left:15px" Click=@(args => OnClick("Registro Guardado")) Variant="Variant.Flat" Text="Guardar" Icon="check_circle" ButtonStyle="ButtonStyle.Primary"  /></a>
            <a href="/ventas"><RadzenButton Style="margin-left:auto" Click=@(args => OnClick("Registro sin guardar")) Variant="Variant.Flat" Text="Volver" Icon="history" ButtonStyle="ButtonStyle.Light" /></a>
           </RadzenStack> 
 </EditForm> 
}

@code { 
    private Ventas editarVenta = new Ventas();

    [Parameter] public int? Id {get; set;}
        protected override async Task OnInitializedAsync(){
            editarVenta = await RepositorioVentas.GetVentasId(Id.Value);
        }

    public async Task manejoEditarVenta(){
        var variableEditarVenta = await RepositorioVentas.ActualizarVenta(Id.Value, editarVenta);
        NavigationManager.NavigateTo("/ventas");
    }

    private void OnClick(string text)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Warning, Detail = text });
    }
    

}
