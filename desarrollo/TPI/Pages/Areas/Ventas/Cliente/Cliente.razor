@page "/ventas"
@using Reciplas.Clases;
@inject NotificationService NotificationService 
@inherits OwningComponentBase<Usuario>
@using System.Collections.Generic;  
@using System.Net.Http.Json;
@using System.Net.Http;
@inject DialogService DialogService   
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject IJSRuntime JS 
@using Reciplas.Repositorio
@inject IRepositorioVentas RepositorioVentas



<PageTitle>Areas</PageTitle>

<TituloPrincipal TextoPrincipal="Ventas" TextoSecundario="Clientes" />   <br>
  
@*<RadzenButton Click=@(args => OnClick("Excel Descargado")) Variant="Variant.Flat" Shade="Shade.Dark"  Text="Excel" Icon="assignment_returned" ButtonStyle="ButtonStyle.Success"/>*@
@if (ventas == null)
{
    @: Cargando datos....
}else{
        @foreach (var venta in ventas)
        {
            
       
<br>
<br>



<CListado TItem="Clases.Ventas" Data="@ventas" PageSize="5" Frozen="true" >
       <Columns>
        
        <RadzenDataGridColumn TItem=" Clases.Ventas" TextAlign="TextAlign.Center"  Title="ID" Width="35px" Frozen="true" @bind-Value="venta.id" /> 
        <RadzenDataGridColumn TItem=" Clases.Ventas"   Title="Fecha" Width="80px"  @bind-Value="venta.fecha" /> 
        <RadzenDataGridColumn TItem="Clases.Ventas"  Title="Cliente" Width="80px" @bind-Value="@venta.cliente" >
            <Template Context="venta">
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/PedidosDetalles"))" TextAlign="TextAlign.Center" Icon="list" ButtonStyle="ButtonStyle.Success" Style="margin-left: 5px" />
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/AgregarPedidoCliente"))" TextAlign="TextAlign.Center" Icon="add_circle_outline" Color="Color.Warning" Style="margin-left: 5px" />
                <RadzenButton onclick="@(() => Eliminaritem(venta.id))"  TextAlign="TextAlign.Center" Icon="delete" ButtonStyle="ButtonStyle.Danger" Style="margin-left: 5px"/>
            </Template>
        </RadzenDataGridColumn> 
    
</Columns>  
</CListado> 
<br> 
<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
   <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/NuevoClienteFormulario"))" Variant="Variant.Flat"  Text="Nuevo" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" />
    <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/ClienteFormulario"))" Variant="Variant.Flat"  Text="Modificar" Icon="check_circle" ButtonStyle="ButtonStyle.Success"  />
 
</RadzenStack>
<br> 
 }
    }



@code {
        private List<Clases.Ventas> ventas = new List<Ventas>();
        
        public void Eliminaritem(int ventasId){

        }
    


    @*private bool isLoading = false;   
    bool value;
    [Parameter] public bool SoloLectura { get; set; } = true;


    protected override async Task OnInitializedAsync(){
        await CargarDatos();
    }
  
    async Task CargarDatos(int pagina =1, int regs =10){
        isLoading = true;
        
        ventas = await Http.GetFromJsonAsync<List<Clases.Ventas>>("api/venta"); 
        isLoading = false;
    }
 async Task RegisterEliminado()
    {
        var result = await DialogService.OpenAsync("EstÃ¡ seguro de que desea eliminar el Pedido?", ds =>
        @<div>
            <div class="row">
                <div class="col">
                   <a href="/Empleados/Ventas/ventasClientes"><RadzenButton Click=@(args => OnClick("Registro Eliminado")) TextAlign="TextAlign.Center" Icon="delete" ButtonStyle="ButtonStyle.Danger" Style="margin-left: 5px" Text="Eliminar" class="me-1"/></a>
                   <RadzenButton Click="() => ds.Close(false)" TextAlign="TextAlign.Center" Icon="delete" ButtonStyle="ButtonStyle.Light" Style="margin-left: 5px" Text="Cancelar"  class="me-1 float-end" />                </div>
            </div>
        </div>);
    } 

    async Task Eliminaritem(int Id){
        var itemSelect = ventas.First(x=> x.id == Id);
        string mensaje = $"Se va a eliminar la venta {itemSelect.id}. Esta seguro?";
        if (await JS.InvokeAsync<bool>("confirm", mensaje)){
            await Http.DeleteAsync($"/ventas/{Id}");
            await CargarDatos();
            }
    }*@

}

